---
- name: Add Kubernetes apt repository
  apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
    state: present
    filename: kubernetes

- name: Create directory for Kubernetes apt key
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes apt key
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    mode: '0644'

- name: Install Kubernetes components
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Start and enable kubelet service
  systemd:
    name: kubelet
    state: started
    enabled: yes

- name: Initialize Kubernetes cluster (Master only)
  command: kubeadm init --pod-network-cidr=10.244.0.0/16
  when: inventory_hostname in groups['master']
  register: kubeadm_init

- name: Create .kube directory
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0755'
  when: inventory_hostname in groups['master']

- name: Copy kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: yes
    mode: '0644'
  when: inventory_hostname in groups['master']

- name: Get join command
  command: kubeadm token create --print-join-command
  register: join_command
  when: inventory_hostname in groups['master']

- name: Set join command fact
  set_fact:
    k8s_join_command: "{{ join_command.stdout }}"
  when: inventory_hostname in groups['master']

- name: Join worker nodes
  command: "{{ hostvars[groups['master'][0]]['k8s_join_command'] }}"
  when: inventory_hostname in groups['worker'] 